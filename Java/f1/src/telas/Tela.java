/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import conexao.ConexaoBanco;
import f1.Autodromo;
import f1.BDAutodromo;
import f1.BDCircuito;
import f1.Circuito;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author u18321
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab_Abas = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txt_nomeAutodromo = new javax.swing.JTextField();
        txt_cidadeAutodromo = new javax.swing.JTextField();
        txt_paisAutodromo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTAutodromo = new javax.swing.JTable();
        btn_AdicionarAutodromo = new javax.swing.JButton();
        btn_alterarAutodromo = new javax.swing.JButton();
        btn_excluirAutodromo = new javax.swing.JButton();
        btn_pesquisarAutodromo = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        txt_idAutodromo = new javax.swing.JTextField();
        btn_listarAutodromo = new javax.swing.JButton();
        txt_enderecoAutodromo = new javax.swing.JTextField();
        txt_descricaoAutodromo = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_nome = new javax.swing.JTextField();
        txt_TotalCorredores = new javax.swing.JTextField();
        cmb_Data = new datechooser.beans.DateChooserCombo();
        txt_Descricao = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTcircuito = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnPresquisar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        btn_listar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tab_Abas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_AbasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1074, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 607, Short.MAX_VALUE)
        );

        tab_Abas.addTab("tab1", jPanel1);

        jLabel5.setText("Nome");

        jLabel12.setText("Cidade");

        jLabel13.setText("Endereço");

        jLabel14.setText("Pais");

        txt_nomeAutodromo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nomeAutodromoActionPerformed(evt);
            }
        });
        txt_nomeAutodromo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nomeAutodromoKeyTyped(evt);
            }
        });

        txt_cidadeAutodromo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cidadeAutodromoActionPerformed(evt);
            }
        });
        txt_cidadeAutodromo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cidadeAutodromoKeyTyped(evt);
            }
        });

        txt_paisAutodromo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_paisAutodromoKeyTyped(evt);
            }
        });

        JTAutodromo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id_Autodromo", "nome_Autodromo", "Endereco", "Cidade", "Pais", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(JTAutodromo);

        btn_AdicionarAutodromo.setText("Adicionar");
        btn_AdicionarAutodromo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AdicionarAutodromoActionPerformed(evt);
            }
        });

        btn_alterarAutodromo.setText("Alterar");
        btn_alterarAutodromo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alterarAutodromoActionPerformed(evt);
            }
        });

        btn_excluirAutodromo.setText("Excluir");
        btn_excluirAutodromo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirAutodromoActionPerformed(evt);
            }
        });

        btn_pesquisarAutodromo.setText("Pesquisar");
        btn_pesquisarAutodromo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pesquisarAutodromoActionPerformed(evt);
            }
        });

        jLabel15.setText("Id para Ações");

        btn_listarAutodromo.setText("Listar");
        btn_listarAutodromo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_listarAutodromoActionPerformed(evt);
            }
        });

        txt_enderecoAutodromo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_enderecoAutodromoKeyTyped(evt);
            }
        });

        txt_descricaoAutodromo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_descricaoAutodromoKeyTyped(evt);
            }
        });

        jLabel16.setText("Descrição");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txt_idAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_AdicionarAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_alterarAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_excluirAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btn_listarAutodromo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btn_pesquisarAutodromo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 22, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel5)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_enderecoAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                    .addComponent(txt_nomeAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(90, 90, 90))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txt_cidadeAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txt_descricaoAutodromo, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_paisAutodromo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)))
                                    .addGap(22, 22, 22)))))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_nomeAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_enderecoAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(txt_cidadeAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_paisAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_descricaoAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(182, 182, 182)
                                .addComponent(jLabel15))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btn_AdicionarAutodromo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_alterarAutodromo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_excluirAutodromo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_pesquisarAutodromo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_listarAutodromo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_idAutodromo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(161, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1074, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 7, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 8, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 607, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        tab_Abas.addTab("Autódromo", jPanel2);

        jLabel1.setText("Nome");

        jLabel2.setText("Total Corredores");

        jLabel3.setText("Data");

        jLabel4.setText("Descrição");

        txt_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nomeActionPerformed(evt);
            }
        });
        txt_nome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nomeKeyTyped(evt);
            }
        });

        txt_TotalCorredores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TotalCorredoresActionPerformed(evt);
            }
        });
        txt_TotalCorredores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TotalCorredoresKeyTyped(evt);
            }
        });

        cmb_Data.setNothingAllowed(false);
        cmb_Data.setFormat(2);

        txt_Descricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_DescricaoKeyTyped(evt);
            }
        });

        JTcircuito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id_Circuito", "nome_Circuito", "Total Corredores", "Data", "Descrição", "Imagem"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTcircuito);

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnPresquisar.setText("Pesquisar");
        btnPresquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPresquisarActionPerformed(evt);
            }
        });

        jLabel11.setText("Id para Ações");

        btn_listar.setText("Listar");
        btn_listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_listarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_TotalCorredores, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                        .addComponent(txt_Descricao)))
                                .addGap(90, 90, 90))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btn_listar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnPresquisar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                                    .addComponent(cmb_Data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txt_TotalCorredores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cmb_Data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txt_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addComponent(btnAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPresquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_listar)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(161, Short.MAX_VALUE))
        );

        tab_Abas.addTab("Circuito", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab_Abas)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab_Abas)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //criando metodo para ler valores do banco de dados(table circuito) e colocar na Jtable
    public void readJTable(){
          DefaultTableModel modelo =(DefaultTableModel) JTcircuito.getModel();
          modelo.setNumRows(0);
          Connection c = ConexaoBanco.criaConexao();
          
          for(Circuito cc : BDCircuito.ListarCircuito(c)){
              
              modelo.addRow(new Object[]{cc.getId(),
                                         cc.getNome_circuito(),
                                         cc.getTotal_corredoes(),
                                         cc.getData(),
                                         cc.getDescricao(),
                                         cc.getImg()});
          }
          
    }
    
    //criando metodo para ler valores do banco de dados(table autodromo) e colocar na Jtable
       public void readJTableAutodromo(){
          DefaultTableModel modelo =(DefaultTableModel) JTAutodromo.getModel();
          modelo.setNumRows(0);
          Connection c = ConexaoBanco.criaConexao();
          
          for(Autodromo a : BDAutodromo.ListarAutodromo(c)){
              
              modelo.addRow(new Object[]{a.getId_autodromo(),
                                         a.getNome(),
                                         a.getEndereco(),
                                         a.getCidade(),
                                         a.getPais(),
                                         a.getDescricao()});
          }
          
    }
    
    
    private void txt_TotalCorredoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TotalCorredoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TotalCorredoresActionPerformed

    private void txt_nomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nomeKeyTyped

        int totalCaracter = 25;
        
        if(txt_nome.getText().length() >= totalCaracter){
            JOptionPane.showMessageDialog(null,"Excedeu o limite de caracteres");
            evt.consume();
        }
        
    }//GEN-LAST:event_txt_nomeKeyTyped

    private void txt_DescricaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_DescricaoKeyTyped
         int totalCaracter = 200;
        
        if(txt_Descricao.getText().length() >= totalCaracter){
            JOptionPane.showMessageDialog(null,"Excedeu o limite de caracteres");
            evt.consume();
            
        }
        
        
    }//GEN-LAST:event_txt_DescricaoKeyTyped

    private void txt_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nomeActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        //adicionando um novo circuito ao banco de dados
        
        System.out.println(cmb_Data.getText());
        if(txt_nome.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Digite um nome");
        }
        if(txt_TotalCorredores.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Digite Total de Corredores");
        }
        else if(txt_Descricao.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Digite uma Descrição");
        }
        else{
           try{
                   Connection conection = ConexaoBanco.criaConexao();
                   Circuito circuito;
                
                   //criando um novo circuito para ser adicionado no bd
                   circuito = new Circuito(txt_nome.getText(),
                        Integer.parseInt(txt_TotalCorredores.getText()),
                        cmb_Data.getText(),
                        txt_Descricao.getText()
                );
                
                   BDCircuito.InserirCircuito(circuito, conection);
                   readJTable();
                  
                   //deixando os campos das tabela limpo
                   txt_id.setText("");
                   txt_nome.setText("");
                   txt_TotalCorredores.setText("");
                   txt_Descricao.setText("");
                   cmb_Data.setText("");
           }catch(Exception ex){
               ex.getMessage();
           }    
            
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void txt_TotalCorredoresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TotalCorredoresKeyTyped
        // TODO add your handling code here:
        //Deixando digitar apenas numeros;
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Digitar apenas numeros");
        }
    }//GEN-LAST:event_txt_TotalCorredoresKeyTyped

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:
        //botao caso o usuario queira modificar algum dados
        if(txt_nome.getText().equals("") && txt_id.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Digite o nome ou o id que deseja Alterar:");
           
        }if(!txt_id.getText().equals("")){
            if(txt_Descricao.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Digite uma descrição");
            }if(txt_TotalCorredores.getText().equals("")){
               JOptionPane.showMessageDialog(null, "Digite total de corredores");  
            }
            if(txt_nome.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Digite um nome");  
            }
            if(cmb_Data.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite uma data");  
            }
            else{
                Connection c;
                try{
                    c = ConexaoBanco.criaConexao();

                    BDCircuito.alterarId(txt_id.getText(), txt_nome.getText(), txt_TotalCorredores.getText(), cmb_Data.getText(), txt_Descricao.getText(), c);


                    c.close();//fechando conexão
                    readJTable();
                    txt_id.setText("");
                    txt_nome.setText("");
                    txt_TotalCorredores.setText("");
                    txt_Descricao.setText("");
                }catch(Exception ex){
                        System.out.println(ex.getMessage());
                } 
            }  
            
        }
        else if(!txt_nome.getText().equals("")){
            if(txt_Descricao.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Digite uma descrição");
            }if(txt_TotalCorredores.getText().equals("")){
               JOptionPane.showMessageDialog(null, "Digite total de corredores");  
            }
            if(cmb_Data.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Digite um nome");  
            }
            else{
                Connection c;
                try{
                    c = ConexaoBanco.criaConexao();

                   BDCircuito.alterar(txt_nome.getText(),txt_TotalCorredores.getText(),txt_Descricao.getText(), cmb_Data.getText(), c);


                    c.close();//fechando conexão
                    readJTable();
                    txt_id.setText("");
                    txt_nome.setText("");
                    txt_TotalCorredores.setText("");
                    txt_Descricao.setText("");
                }catch(Exception ex){
                        System.out.println(ex.getMessage());
                } 
            }  
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        
        if(txt_nome.getText().equals("") && txt_id.getText().equals("")){//deletar pelo nome do circuito
            JOptionPane.showMessageDialog(null, "Digite o nome ou o id que deseja excluir:");
        }if(!txt_nome.getText().equals("")) {
              Connection connection = null;
            try {
              
                connection = ConexaoBanco.criaConexao();
            
                BDCircuito.deletar(txt_nome.getText(), connection);
                readJTable();
                   txt_id.setText("");
                   txt_nome.setText("");
                   txt_TotalCorredores.setText("");
                   txt_Descricao.setText("");
                   cmb_Data.setText("");
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Erro ao deletar");
            }finally{
                  try {
                      connection.close();
                  } catch (SQLException ex) {
                      Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                  }
            }
          
        }else if(!txt_id.getText().equals("")){//caso queira deletar pelo id do circuito
             try {
                Connection connection;
                connection = ConexaoBanco.criaConexao();
            
                BDCircuito.deletarId(txt_id.getText(), connection);
                readJTable();
                
                   txt_id.setText("");
                   txt_nome.setText("");
                   txt_TotalCorredores.setText("");
                   txt_Descricao.setText("");
                   cmb_Data.setText("");
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Erro ao deletar");
            }
            
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnPresquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPresquisarActionPerformed
        // TODO add your handling code here:
        PreparedStatement ps;
         Connection connection = null;
        if(txt_nome.getText().equals("")&&txt_id.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite um nome ou um id para consultar");
        }
        if(!txt_nome.getText().equals("")){
            
            ResultSet rs = null;
            try {
               
                connection = ConexaoBanco.criaConexao();
               rs =  BDCircuito.consultarNome(txt_nome.getText(), connection);
               DefaultTableModel modelo =(DefaultTableModel) JTcircuito.getModel();
               modelo.setNumRows(0);
               
               while(rs.next()){
                 
                   //passando os dados para dentro da tabela 
                   
                    
                    modelo.addRow(new Object[]{
                        rs.getString("id_circuito"),
                         rs.getString("nome_circuito"),
                        rs.getString("total_corredores"),
                         rs.getString("data"),
                         rs.getString("descricao"),
                         rs.getBytes("imagem")
                    });
               }
                   txt_id.setText("");
                   txt_nome.setText("");
                   txt_TotalCorredores.setText("");
                   txt_Descricao.setText("");
                   cmb_Data.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    connection.close();
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                }
               

            }
        }else if(!txt_id.getText().equals("")){
             ResultSet rs = null;
            try {
               
                connection = ConexaoBanco.criaConexao();
                rs =  BDCircuito.consultar(txt_id.getText(), connection);
                //colocando dados dentro da tabela visual
                DefaultTableModel modelo =(DefaultTableModel) JTcircuito.getModel();
               modelo.setNumRows(0);
               while(rs.next()){
                  modelo.addRow(new Object[]{
                        rs.getString("id_circuito"),
                         rs.getString("nome_circuito"),
                        rs.getString("total_corredores"),
                         rs.getString("data"),
                         rs.getString("descricao"),
                         rs.getBytes("imagem")
                    });
               }
                   txt_id.setText("");
                   txt_nome.setText("");
                   txt_TotalCorredores.setText("");
                   txt_Descricao.setText("");
                   cmb_Data.setText("");
                   
                   
            } catch (SQLException ex) {
                Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    connection.close();
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                }
               
             }
        
        }
       
    }//GEN-LAST:event_btnPresquisarActionPerformed

    private void btn_listarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_listarActionPerformed
        // TODO add your handling code here:
        readJTable();
    }//GEN-LAST:event_btn_listarActionPerformed

    private void txt_nomeAutodromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nomeAutodromoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nomeAutodromoActionPerformed

    private void txt_nomeAutodromoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nomeAutodromoKeyTyped
       int totalChar=25;
       
       if(txt_nomeAutodromo.getText().length() >= totalChar){
           JOptionPane.showMessageDialog(null, "Excedeu o limite de caracteres");
           evt.consume();//não deixar digitar
       }
    }//GEN-LAST:event_txt_nomeAutodromoKeyTyped

    private void txt_cidadeAutodromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cidadeAutodromoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cidadeAutodromoActionPerformed

    private void txt_cidadeAutodromoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cidadeAutodromoKeyTyped
        // TODO add your handling code here:
          int totalchar=40;
           if(txt_cidadeAutodromo.getText().length()>=totalchar){
               JOptionPane.showMessageDialog(null, "Excedeu o limite de caracteres");
               evt.consume();//nao deixa digitar
           }
    }//GEN-LAST:event_txt_cidadeAutodromoKeyTyped

    private void txt_paisAutodromoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_paisAutodromoKeyTyped
        // TODO add your handling code here:
          int totalchar=20;
           if(txt_paisAutodromo.getText().length()>=totalchar){
               JOptionPane.showMessageDialog(null, "Excedeu o limite de caracteres");
               evt.consume();//nao deixa digitar
           }
    }//GEN-LAST:event_txt_paisAutodromoKeyTyped

    private void btn_AdicionarAutodromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AdicionarAutodromoActionPerformed
         if(txt_nomeAutodromo.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Digite o nome do autódromo");
         } if(txt_paisAutodromo.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Digite o pais do autódromo");
         } if(txt_cidadeAutodromo.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Digite a cidade do autódromo");
         } if(txt_enderecoAutodromo.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Digite o endereço do autódromo");
         } else if(txt_descricaoAutodromo.getText().equals("")){
             JOptionPane.showMessageDialog(null, "Digite a descrição do autódromo");
         }else{
            Connection connection;
            
            connection = ConexaoBanco.criaConexao();//criando conexão 
            //criando objeto da classe autodromo para ser passada como objeto e em seguida ser mandada para o banco de dados
            Autodromo a = new Autodromo(txt_nomeAutodromo.getText(),txt_enderecoAutodromo.getText(),txt_cidadeAutodromo.getText(),txt_paisAutodromo.getText(),txt_descricaoAutodromo.getText());
            
            //inserindo dados no banco de dados
            BDAutodromo.InserirAutodromo(a, connection);
            readJTableAutodromo();
            
            txt_nomeAutodromo.setText("");
            txt_paisAutodromo.setText("");
            txt_cidadeAutodromo.setText("");
            txt_enderecoAutodromo.setText("");
            txt_descricaoAutodromo.setText("");
            
            
             try {
                 connection.close();
             } catch (SQLException ex) {
                 Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
             }
         }
    }//GEN-LAST:event_btn_AdicionarAutodromoActionPerformed

    private void btn_alterarAutodromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alterarAutodromoActionPerformed
        // TODO add your handling code here:
        if(txt_nomeAutodromo.getText().equals("") && txt_idAutodromo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite um nome ou um id para alterar");
        }
        if(!txt_idAutodromo.getText().equals("")){
                if(txt_nomeAutodromo.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite o nome do autódromo");
              } if(txt_paisAutodromo.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite o pais do autódromo");
              } if(txt_cidadeAutodromo.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite a cidade do autódromo");
              } if(txt_enderecoAutodromo.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite o endereço do autódromo");
              } else if(txt_descricaoAutodromo.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite a descrição do autódromo");
              }else{
                   Connection c;
                try{
                    c = ConexaoBanco.criaConexao();

                    BDAutodromo.alterarId(txt_idAutodromo.getText(), txt_nomeAutodromo.getText(), txt_enderecoAutodromo.getText(), txt_cidadeAutodromo.getText(), txt_paisAutodromo.getText(), txt_descricaoAutodromo.getText(), c);


                    c.close();//fechando conexão
                    readJTableAutodromo();
                    txt_nomeAutodromo.setText("");
                    txt_idAutodromo.setText("");
                    txt_paisAutodromo.setText("");
                    txt_cidadeAutodromo.setText("");
                    txt_enderecoAutodromo.setText("");
                    txt_descricaoAutodromo.setText("");
                }catch(Exception ex){
                        System.out.println(ex.getMessage());
                } 
              }
        }
        //
        if(!txt_nomeAutodromo.getText().equals("")){
                if(txt_paisAutodromo.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite o pais do autódromo");
              } if(txt_cidadeAutodromo.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite a cidade do autódromo");
              } if(txt_enderecoAutodromo.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite o endereço do autódromo");
              } else if(txt_descricaoAutodromo.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "Digite a descrição do autódromo");
              }else{
                   Connection c;
                try{
                    c = ConexaoBanco.criaConexao();

                    BDAutodromo.alterar(txt_nomeAutodromo.getText(), txt_enderecoAutodromo.getText(), txt_cidadeAutodromo.getText(), txt_paisAutodromo.getText(), txt_descricaoAutodromo.getText(), c);


                    c.close();//fechando conexão
                    readJTableAutodromo();
                    txt_nomeAutodromo.setText("");
                    txt_idAutodromo.setText("");
                    txt_paisAutodromo.setText("");
                    txt_cidadeAutodromo.setText("");
                    txt_enderecoAutodromo.setText("");
                    txt_descricaoAutodromo.setText("");
                }catch(Exception ex){
                        System.out.println(ex.getMessage());
                } 
              }
        }
    }//GEN-LAST:event_btn_alterarAutodromoActionPerformed

    private void btn_excluirAutodromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirAutodromoActionPerformed
        // TODO add your handling code here:
            if(txt_nomeAutodromo.getText().equals("") && txt_idAutodromo.getText().equals("")){//deletar pelo nome do circuito
            JOptionPane.showMessageDialog(null, "Digite o nome ou o id que deseja excluir:");
        }if(!txt_nomeAutodromo.getText().equals("")) {
              Connection connection = null;
            try {
              
                connection = ConexaoBanco.criaConexao();
            
                BDAutodromo.deletar(txt_nomeAutodromo.getText(), connection);
                   readJTableAutodromo();
                   txt_idAutodromo.setText("");
                   txt_nomeAutodromo.setText("");
                 
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Erro ao deletar");
            }finally{
                  try {
                      connection.close();
                  } catch (SQLException ex) {
                      Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                  }
            }
          
        }else if(!txt_idAutodromo.getText().equals("")){//caso queira deletar pelo id do circuito
             try {
                Connection connection;
                connection = ConexaoBanco.criaConexao();
            
                BDAutodromo.deletarId(txt_idAutodromo.getText(), connection);
                readJTableAutodromo();
                
                   txt_idAutodromo.setText("");
                   txt_nomeAutodromo.setText("");
                   
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Erro ao deletar");
            }
            
        }
    }//GEN-LAST:event_btn_excluirAutodromoActionPerformed

    private void btn_pesquisarAutodromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pesquisarAutodromoActionPerformed
        // TODO add your handling code here:
          PreparedStatement ps;
         Connection connection = null;
        if(txt_nomeAutodromo.getText().equals("")&&txt_idAutodromo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite um nome ou um id para consultar");
        }
        if(!txt_nomeAutodromo.getText().equals("")){
            
            ResultSet rs = null;
            try {
               
                connection = ConexaoBanco.criaConexao();
               rs =  BDAutodromo.consultarNome(txt_nomeAutodromo.getText(), connection);
               DefaultTableModel modelo =(DefaultTableModel) JTAutodromo.getModel();
               modelo.setNumRows(0);
               
               while(rs.next()){
                 
                   //passando os dados para dentro da tabela 
                    modelo.addRow(new Object[]{rs.getString("id_autodromo"),//.getId_autodromo(),
                                         rs.getString("nome"),//getNome(),
                                         rs.getString("endereco"),
                                         rs.getString("cidade"),
                                         rs.getString("pais"),
                                         rs.getString("descricao")
                                         });
                    
                   
               }
                   txt_idAutodromo.setText("");
                   txt_nomeAutodromo.setText("");
                  
                
                   
            } catch (SQLException ex) {
                Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    connection.close();
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                }
               

            }
        }else if(!txt_idAutodromo.getText().equals("")){
             ResultSet rs = null;
            try {
               
                connection = ConexaoBanco.criaConexao();
                rs =  BDAutodromo.consultar(txt_idAutodromo.getText(), connection);
                //colocando dados dentro da tabela visual
                DefaultTableModel modelo =(DefaultTableModel) JTAutodromo.getModel();
               modelo.setNumRows(0);
               while(rs.next()){
                  modelo.addRow(new Object[]{rs.getString("id_autodromo"),
                                         rs.getString("nome"),
                                         rs.getString("endereco"),
                                         rs.getString("cidade"),
                                         rs.getString("pais"),
                                         rs.getString("descricao")
                                         });
               }
                   txt_idAutodromo.setText("");
                   txt_nomeAutodromo.setText("");
                   
                   
            } catch (SQLException ex) {
                Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    connection.close();
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                }
               
             }
        
        }
        
    }//GEN-LAST:event_btn_pesquisarAutodromoActionPerformed

    private void btn_listarAutodromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_listarAutodromoActionPerformed
        // TODO add your handling code here:
        readJTableAutodromo();
    }//GEN-LAST:event_btn_listarAutodromoActionPerformed

    private void txt_enderecoAutodromoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_enderecoAutodromoKeyTyped
        // TODO add your handling code here:
           int totalchar=200;
           if(txt_enderecoAutodromo.getText().length()>=totalchar){
               JOptionPane.showMessageDialog(null, "Excedeu o limite de caracteres");
               evt.consume();//nao deixa digitar
           }
    }//GEN-LAST:event_txt_enderecoAutodromoKeyTyped

    private void txt_descricaoAutodromoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_descricaoAutodromoKeyTyped
        // TODO add your handling code here:
          int totalchar=200;
           if(txt_descricaoAutodromo.getText().length()>=totalchar){
               JOptionPane.showMessageDialog(null, "Excedeu o limite de caracteres");
               evt.consume();//nao deixa digitar
           }
    }//GEN-LAST:event_txt_descricaoAutodromoKeyTyped

    private void tab_AbasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_AbasMouseClicked
    
    }//GEN-LAST:event_tab_AbasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTAutodromo;
    private javax.swing.JTable JTcircuito;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPresquisar;
    private javax.swing.JButton btn_AdicionarAutodromo;
    private javax.swing.JButton btn_alterarAutodromo;
    private javax.swing.JButton btn_excluirAutodromo;
    private javax.swing.JButton btn_listar;
    private javax.swing.JButton btn_listarAutodromo;
    private javax.swing.JButton btn_pesquisarAutodromo;
    private datechooser.beans.DateChooserCombo cmb_Data;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane tab_Abas;
    private javax.swing.JTextField txt_Descricao;
    private javax.swing.JTextField txt_TotalCorredores;
    private javax.swing.JTextField txt_cidadeAutodromo;
    private javax.swing.JTextField txt_descricaoAutodromo;
    private javax.swing.JTextField txt_enderecoAutodromo;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_idAutodromo;
    private javax.swing.JTextField txt_nome;
    private javax.swing.JTextField txt_nomeAutodromo;
    private javax.swing.JTextField txt_paisAutodromo;
    // End of variables declaration//GEN-END:variables
}
